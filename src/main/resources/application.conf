################################################
#      Evactor Twitter Example config file     #
################################################

evactor {

  collectors {
    twitter_collector {
      listener {
        class = org.evactor.twitter.listener.TwitterListener
      }
      transformer {
        class = org.evactor.twitter.transformer.TwitterJsonToStatusEvent
      }
      publication = { channel = "twitter" }
    }
  } 
  
  processors {
    
    # trending hashtag flow
    
    twitter_hashtag_filter {
      type = filter 
      subscriptions = [ {channel = "twitter"} ]
      publication = { channel = "twitter:hashtag" }
      expression = { mvel = "hashtags == null || hashtags.size() == 0" }Â 
      accept = false
    }
    
    twitter_hashtag_trend {
      type = regressionAnalyser
      subscriptions = [ { channel = "twitter:hashtag" } ]
      publication = { channel = "twitter:hashtag:trend" }
      categorization = { OneAndOne { mvel = "hashtags" } }
      minSize = 20
      timeframe = 10 minutes
    }
    
    twitter_hashtag_trending {
      type = filter 
      subscriptions = [ {channel = "twitter:hashtag:trend"} ]
      publication = { channel = "twitter:hashtag:trending" }
      expression = { mvel = "value > 0.0" }
      accept = true
    }
    
    twitter_hashtag_counter {
      type = countAnalyser
      subscriptions = [ { channel = "twitter:hashtag" } ]
      publication = { channel = "twitter:hashtag:count" }
      categorization = { OneAndOne { mvel = "hashtags" } }
      timeframe = 10 minutes
    }
    
  }
    
  api {
    port = 8080
  }
  
}

# akka stuff
akka {
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loglevel = INFO
}

